services:
  postgresql:
    image: docker.io/library/postgres:16-alpine
    hostname: postgresql
    networks:
      - authentik
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    networks:
      - authentik
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - ./redis:/data
  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:latest
    hostname: authentik
    command: server
    networks:
      - authentik
      - caddy
    environment:
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=postgres
      - AUTHENTIK_POSTGRESQL__NAME=postgres
      - AUTHENTIK_POSTGRESQL__PASSWORD=postgres
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    # ports:
     # - "9000:9000"
     # - "9443:9443"
    depends_on:
      - postgresql
      - redis
  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:latest
    command: worker
    networks:
      - authentik
    environment:
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=postgres
      - AUTHENTIK_POSTGRESQL__NAME=postgres
      - AUTHENTIK_POSTGRESQL__PASSWORD=postgres
      - AUTHENTIK_SECRET_KEY={secret_key}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    depends_on:
      - postgresql
      - redis
networks:
  caddy:
    external: true
  authentik:
    external: true
